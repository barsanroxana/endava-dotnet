// <auto-generated />
using System;
using FoodPal.Providers.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodPal.Providers.DataAccess.Migrations
{
    [DbContext(typeof(ProvidersContext))]
    partial class ProvidersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FoodPal.Providers.DomainModels.Catalogue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId")
                        .IsUnique();

                    b.ToTable("Catalogue");
                });

            modelBuilder.Entity("FoodPal.Providers.DomainModels.CatalogueItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CatalogueId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogueId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CatalogueItems");
                });

            modelBuilder.Entity("FoodPal.Providers.DomainModels.CatalogueItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CatalogueItemCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2021, 2, 8, 21, 40, 46, 408, DateTimeKind.Local).AddTicks(7566),
                            Name = "Dessert"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2021, 2, 8, 21, 40, 46, 408, DateTimeKind.Local).AddTicks(8457),
                            Name = "Main Course"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2021, 2, 8, 21, 40, 46, 408, DateTimeKind.Local).AddTicks(8481),
                            Name = "Soups"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2021, 2, 8, 21, 40, 46, 408, DateTimeKind.Local).AddTicks(8486),
                            Name = "Apperitives"
                        });
                });

            modelBuilder.Entity("FoodPal.Providers.DomainModels.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("FoodPal.Providers.DomainModels.ProviderCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProviderCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2021, 2, 8, 21, 40, 46, 400, DateTimeKind.Local).AddTicks(9824),
                            Name = "Mediteranean Cousine"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2021, 2, 8, 21, 40, 46, 406, DateTimeKind.Local).AddTicks(6954),
                            Name = "Tradinional Romanian Cousine"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2021, 2, 8, 21, 40, 46, 406, DateTimeKind.Local).AddTicks(7044),
                            Name = "Japonese Cousine"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2021, 2, 8, 21, 40, 46, 406, DateTimeKind.Local).AddTicks(7054),
                            Name = "Thai Cousine"
                        });
                });

            modelBuilder.Entity("FoodPal.Providers.DomainModels.Catalogue", b =>
                {
                    b.HasOne("FoodPal.Providers.DomainModels.Provider", "Provider")
                        .WithOne("Catalogue")
                        .HasForeignKey("FoodPal.Providers.DomainModels.Catalogue", "ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("FoodPal.Providers.DomainModels.CatalogueItem", b =>
                {
                    b.HasOne("FoodPal.Providers.DomainModels.Catalogue", "Catalogue")
                        .WithMany("Items")
                        .HasForeignKey("CatalogueId");

                    b.HasOne("FoodPal.Providers.DomainModels.CatalogueItemCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogue");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FoodPal.Providers.DomainModels.Provider", b =>
                {
                    b.HasOne("FoodPal.Providers.DomainModels.ProviderCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FoodPal.Providers.DomainModels.Catalogue", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FoodPal.Providers.DomainModels.Provider", b =>
                {
                    b.Navigation("Catalogue")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
